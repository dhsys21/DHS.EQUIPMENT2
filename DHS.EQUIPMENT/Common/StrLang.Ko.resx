<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AMSSTART" xml:space="preserve">
    <value>시작</value>
  </data>
  <data name="AMSSTOP" xml:space="preserve">
    <value>정지</value>
  </data>
  <data name="AUTO" xml:space="preserve">
    <value>자동</value>
  </data>
  <data name="BTNMSASTART" xml:space="preserve">
    <value>시작</value>
  </data>
  <data name="BTNMSASTOP" xml:space="preserve">
    <value>정지</value>
  </data>
  <data name="BTNOFFSETAPPLY" xml:space="preserve">
    <value>적용</value>
  </data>
  <data name="BTNOFFSETOPEN" xml:space="preserve">
    <value>열기</value>
  </data>
  <data name="BTNOFFSETSAVE" xml:space="preserve">
    <value>저장</value>
  </data>
  <data name="BTNOFFSETSTART" xml:space="preserve">
    <value>시작</value>
  </data>
  <data name="BTNOFFSETSTOP" xml:space="preserve">
    <value>정지</value>
  </data>
  <data name="BTNSAVEDATA" xml:space="preserve">
    <value>저장</value>
  </data>
  <data name="BTNTRAYDOWN" xml:space="preserve">
    <value>트레이 하강</value>
  </data>
  <data name="BTNTRAYUP" xml:space="preserve">
    <value>트레이 상승</value>
  </data>
  <data name="CONFIG" xml:space="preserve">
    <value>환경설정</value>
  </data>
  <data name="INITDATA" xml:space="preserve">
    <value>초기화</value>
  </data>
  <data name="Initialize" xml:space="preserve">
    <value>초기화</value>
  </data>
  <data name="IROCVCONNECTION" xml:space="preserve">
    <value>IR/OCV is not connected.</value>
  </data>
  <data name="IROCVMANUALMODE" xml:space="preserve">
    <value>IR/OCV is Manual Mode.</value>
  </data>
  <data name="IROCVRESETMSG" xml:space="preserve">
    <value>Do you want to reset IR/OCV?</value>
  </data>
  <data name="IROCVRESETTITLE" xml:space="preserve">
    <value>RESET IR/OCV</value>
  </data>
  <data name="LBLDATAREPLY" xml:space="preserve">
    <value>응답 ← MES</value>
  </data>
  <data name="LBLDATAUPLOAD" xml:space="preserve">
    <value>데이타 → MES</value>
  </data>
  <data name="LBLERRORCODE" xml:space="preserve">
    <value>에러 코드</value>
  </data>
  <data name="LBLERRORMESSAGE" xml:space="preserve">
    <value>에러 메세지</value>
  </data>
  <data name="LBLIRRANGE" xml:space="preserve">
    <value>IR 범위</value>
  </data>
  <data name="LBLIRREMEASURE" xml:space="preserve">
    <value>IR 범위</value>
  </data>
  <data name="LBLMANUALTITLE" xml:space="preserve">
    <value>수동</value>
  </data>
  <data name="LBLOCVRANGE" xml:space="preserve">
    <value>OCV 범위</value>
  </data>
  <data name="LBLOCVREMEASURE" xml:space="preserve">
    <value>OCV 범위</value>
  </data>
  <data name="LBLOFFSETCHANNEL" xml:space="preserve">
    <value>채널</value>
  </data>
  <data name="LBLOFFSETREPEATCOUNT" xml:space="preserve">
    <value>반복횟수</value>
  </data>
  <data name="LBLPROCESS" xml:space="preserve">
    <value>상태 코드</value>
  </data>
  <data name="LBLRECIPE" xml:space="preserve">
    <value>레시피</value>
  </data>
  <data name="LBLREPLYTRAYINFO" xml:space="preserve">
    <value>트레이정보 ← MES</value>
  </data>
  <data name="LBLREQUESTTRAYINFO" xml:space="preserve">
    <value>트레이아이디 → MES</value>
  </data>
  <data name="LBLSTATUS" xml:space="preserve">
    <value>상태정보</value>
  </data>
  <data name="LBLTRAYID" xml:space="preserve">
    <value>트레이 아이디</value>
  </data>
  <data name="LBLTRAYSETTING" xml:space="preserve">
    <value>트레이 셋팅</value>
  </data>
  <data name="MAINTITLE" xml:space="preserve">
    <value>IR/OCV 검사 2024 06 10</value>
  </data>
  <data name="MANUAL" xml:space="preserve">
    <value>수동</value>
  </data>
  <data name="MANUALMODE" xml:space="preserve">
    <value>수동검사모드</value>
  </data>
  <data name="MESCONNECTION" xml:space="preserve">
    <value>MES is not connected</value>
  </data>
  <data name="NGINFO" xml:space="preserve">
    <value>NG 정보</value>
  </data>
  <data name="OFFSETAPPLYMSG" xml:space="preserve">
    <value>There are more than 1 zero value in measure field.</value>
  </data>
  <data name="OFFSETAPPLYTITLE" xml:space="preserve">
    <value>Apply offset Error.</value>
  </data>
  <data name="PLCCONNECTION" xml:space="preserve">
    <value>PLC가 연결되지 않았습니다.</value>
  </data>
  <data name="PLCERROR" xml:space="preserve">
    <value>PLC is error</value>
  </data>
  <data name="PLCMANUALMODE" xml:space="preserve">
    <value>PLC is Manual Mode</value>
  </data>
  <data name="PNLBARCODE" xml:space="preserve">
    <value>바코드</value>
  </data>
  <data name="PNLFINISH" xml:space="preserve">
    <value>종료</value>
  </data>
  <data name="PNLMEASURE" xml:space="preserve">
    <value>측정</value>
  </data>
  <data name="PNLMEASURINGTITLE" xml:space="preserve">
    <value>IR/OCV 측정 값</value>
  </data>
  <data name="PNLREADY" xml:space="preserve">
    <value>준비</value>
  </data>
  <data name="PNLTRAYDOWN" xml:space="preserve">
    <value>트레이 하강</value>
  </data>
  <data name="PNLTRAYIN" xml:space="preserve">
    <value>트레이 투입</value>
  </data>
  <data name="PNLTRAYOUT" xml:space="preserve">
    <value>트레이 배출</value>
  </data>
  <data name="PNLTRAYUP" xml:space="preserve">
    <value>트레이 상승</value>
  </data>
  <data name="RESET" xml:space="preserve">
    <value>리셋</value>
  </data>
  <data name="STEPEND" xml:space="preserve">
    <value>IR/OCV 측정 종료.</value>
  </data>
  <data name="STEPRUNNING" xml:space="preserve">
    <value>IR/OCV 측정 중.</value>
  </data>
  <data name="STEPTRAYIN" xml:space="preserve">
    <value>IR/OCV 트레이 도착.</value>
  </data>
  <data name="STEPTRAYOUT" xml:space="preserve">
    <value>IR/OCV Tray Out.</value>
  </data>
  <data name="STEPTRAYUP" xml:space="preserve">
    <value>IR/OCV 트레이 상승.</value>
  </data>
  <data name="STEPVACANCY" xml:space="preserve">
    <value>IR/OCV가 대기상태입니다.</value>
  </data>
  <data name="TRAYOUT" xml:space="preserve">
    <value>배출</value>
  </data>
</root>